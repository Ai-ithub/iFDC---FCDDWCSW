# -*- coding: utf-8 -*-
"""Z-Score.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ZYR8WcLHgLavf1Ripnp3BtHhoo8qL28-
"""

from google.colab import drive
drive.mount('/content/mydrive')

!pip install pandas pyarrow
!pip install pandas fastparquet

import pandas as pd
import numpy as np
from scipy import stats

# خواندن داده‌ها از فایل CSV
input_file = '//content//mydrive//MyDrive//Colab Notebooks//formation_damage_optimized.parquet'  # نام فایل ورودی
output_cleaned = '//content//mydrive//MyDrive//Colab Notebooks//cleaned_data_zscore.csv'
output_removed = '//content//mydrive//MyDrive//Colab Notebooks//removed_outliers_zscore.csv'

df = pd.read_parquet(input_file)

# ستون‌های مورد نظر برای آنالیز
columns_to_check = ['Temperature_C', 'Pressure_psi', 'Permeability_mD', 'Flow_Rate_bbl_day']

# تعریف تابع تشخیص پرت با روش Z-Score
def detect_outliers_zscore(df, column, threshold=3):
    z_scores = np.abs(stats.zscore(df[[column]]))
    outliers = df[z_scores[:, 0] > threshold]
    return outliers

# ذخیره داده‌های غیرمعمول
removed_outliers = pd.DataFrame()

# پردازش هر ستون
for col in columns_to_check:
    if col not in df.columns:
        print(f"⚠️ ستون '{col}' وجود ندارد و از پردازش حذف شد.")
        continue

    outliers = detect_outliers_zscore(df, col)
    print(f"\n {col}:")
    print(f"تعداد مقادیر پرت: {len(outliers)}")

    removed_outliers = pd.concat([removed_outliers, outliers], axis=0)

# حذف سطرهای دارای مقادیر پرت از داده‌های اصلی
cleaned_df = df.drop(removed_outliers.index).dropna().reset_index(drop=True)

# ذخیره داده‌های تمیز شده
cleaned_df.to_csv(output_cleaned, index=False)
print(f"\n داده‌های تمیز شده با روش Z-Score در فایل '{output_cleaned}' ذخیره شد.")

# ذخیره مقادیر پرت در یک فایل جداگانه
if not removed_outliers.empty:
    removed_outliers.to_csv(output_removed, index=False)
    print(f" مقادیر پرت با روش Z-Score در فایل '{output_removed}' ذخیره شد.")
else:
    print(" هیچ مقدار پرتی یافت نشد.")