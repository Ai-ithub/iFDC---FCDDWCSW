# -*- coding: utf-8 -*-
"""Untitled24.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Zp2rxW6nvXDXW6WqcrSagxJgbU7G9YvH
"""

from google.colab import drive
drive.mount('/content/mydrive')

import pandas as pd

# مسیر فایل CSV خود را اینجا قرار دهید
file_path = '//content//mydrive//MyDrive//Colab Notebooks//processed_data.csv'

try:
    # خواندن فایل CSV
    df = pd.read_csv(file_path)

    # بررسی مقادیر گمشده در هر ستون
    missing_values = df.isnull().sum()

    # فیلتر کردن ستون‌هایی که دارای مقادیر گمشده هستند
    missing_columns = missing_values[missing_values > 0]

    if not missing_columns.empty:
        print("✅ ستون‌های دارای مقادیر گمشده:")
        print(missing_columns)
    else:
        print("🎉 هیچ ستونی دارای مقدار گمشده نیست.")

except FileNotFoundError:
    print("❌ فایل پیدا نشد. مسیر صحیح را وارد کنید.")
except Exception as e:
    print(f"⚠️ خطایی رخ داده است: {e}")

import pandas as pd
import numpy as np
from sklearn.impute import SimpleImputer, KNNImputer
from sklearn.preprocessing import StandardScaler

# مسیر فایل CSV خود را اینجا قرار دهید
file_path = '//content/mydrive//MyDrive//Colab Notebooks//processed_data.csv'
output_file = '//content/mydrive//MyDrive//Colab Notebooks//output.csv'
try:
    # خواندن فایل CSV
    df = pd.read_csv(file_path)

    # نمایش داده‌های اولیه
    print("📊 داده‌های اولیه:")
    print(df.head())

    # بررسی مقادیر گمشده
    print("\n🔍 بررسی مقادیر گمشده:")
    missing_values = df.isnull().sum()
    print(missing_values[missing_values > 0])

    # 1️⃣ روش آماری: میانگین
    print("\n🔹 تخمین با میانگین:")
    imputer_mean = SimpleImputer(strategy='mean')
    df_mean = pd.DataFrame(imputer_mean.fit_transform(df.select_dtypes(include=np.number)),
                            columns=df.select_dtypes(include=np.number).columns)
    print(df_mean.head())

    # 2️⃣ روش آماری: میانه
    print("\n🔹 تخمین با میانه:")
    imputer_median = SimpleImputer(strategy='median')
    df_median = pd.DataFrame(imputer_median.fit_transform(df.select_dtypes(include=np.number)),
                              columns=df.select_dtypes(include=np.number).columns)
    print(df_median.head())

    # 3️⃣ روش آماری: مد (Mode)
    print("\n🔹 تخمین با مد:")
    imputer_mode = SimpleImputer(strategy='most_frequent')
    df_mode = pd.DataFrame(imputer_mode.fit_transform(df), columns=df.columns)
    print(df_mode.head())

    # 4️⃣ روش یادگیری ماشین: KNN Imputer
    print("\n🔹 تخمین با KNN Imputer:")

    # ابتدا داده‌ها را نرمال‌سازی می‌کنیم (ضروری برای KNN)
    scaler = StandardScaler()
    df_scaled = scaler.fit_transform(df.select_dtypes(include=np.number))

    # KNN Imputer
    imputer_knn = KNNImputer(n_neighbors=5)
    df_knn = pd.DataFrame(imputer_knn.fit_transform(df_scaled),
                           columns=df.select_dtypes(include=np.number).columns)

    # بازگرداندن داده‌ها به مقیاس اصلی
    df_knn_original = scaler.inverse_transform(df_knn)
    df_knn_original = pd.DataFrame(df_knn_original, columns=df.select_dtypes(include=np.number).columns)

    print(df_knn_original.head())

    df_knn_original.to_csv(output_file, index=False)
    print(f"\n✅ داده‌ها با موفقیت در '{output_file}' ذخیره شدند.")

except FileNotFoundError:
    print("❌ فایل پیدا نشد. مسیر صحیح را وارد کنید.")
except Exception as e:
    print(f"⚠️ خطایی رخ داده است: {e}")